[
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToCurrencyFacadeBridge.php",
        "description": "Bridges: Method findCurrencyByIsoCode() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToPriceProductFacadeBridge.php",
        "description": "Bridges: Method findPriceProductFor() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToPriceProductFacadeBridge.php",
        "description": "Bridges: Method removePriceProductDefaultForPriceProduct() must have `public function delete<DomainEntity>Collection(<DomainEntity>CollectionDeleteCriteriaTransfer): <DomainEntity>CollectionResponseTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToPriceProductFacadeBridge.php",
        "description": "Bridges: Method findProductAbstractPricesWithoutPriceExtraction() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToPriceProductFacadeBridge.php",
        "description": "Bridges: Method findProductConcretePricesWithoutPriceExtraction() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToPriceProductFacadeBridge.php",
        "description": "Bridges: Method findPriceTypeByName() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToPriceProductFacadeBridge.php",
        "description": "Bridges: Method createPriceForProduct() must have `public function create<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToPriceProductFacadeBridge.php",
        "description": "Prefix `is` must not be used with postfix `Exist`. Method: Spryker\\Zed\\PriceProductSchedule\\Dependency\\Facade\\PriceProductScheduleToPriceProductFacadeBridge::isPriceProductByProductIdentifierAndPriceTypeExists().",
        "rule": "ExistsPostfixRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToPriceProductFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `createPriceForProduct()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToProductFacadeBridge.php",
        "description": "Bridges: Type should be defined for param `sku` in method `Spryker\\Zed\\PriceProductSchedule\\Dependency\\Facade\\PriceProductScheduleToProductFacadeBridge::findProductAbstractIdBySku()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToProductFacadeBridge.php",
        "description": "Bridges: Method findProductAbstractIdBySku() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToProductFacadeBridge.php",
        "description": "Bridges: Type should be defined for param `sku` in method `Spryker\\Zed\\PriceProductSchedule\\Dependency\\Facade\\PriceProductScheduleToProductFacadeBridge::findProductConcreteIdBySku()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToProductFacadeBridge.php",
        "description": "Bridges: Method findProductConcreteIdBySku() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToProductFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `findProductAbstractIdBySku()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToProductFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `findProductConcreteIdBySku()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToPropelFacadeBridge.php",
        "description": "Bridges: Method getCurrentDatabaseEngine() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToPropelFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `getCurrentDatabaseEngine()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToStoreFacadeBridge.php",
        "description": "Bridges: Method getCurrentStore() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToStoreFacadeBridge.php",
        "description": "Bridges: Method findStoreByName() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToUserFacadeBridge.php",
        "description": "Bridges: Method getCurrentUser() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToUserFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `getCurrentUser()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Dependency/Facade/PriceProductScheduleToUserFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `hasCurrentUser()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Persistence/Disable/PriceProductScheduleDisableFinder.php",
        "description": "Prefix `is` must not be used with postfix `Exist`. Method: Spryker\\Zed\\PriceProductSchedule\\Persistence\\Disable\\PriceProductScheduleDisableFinder::isScheduledPriceForSwitchExists().",
        "rule": "ExistsPostfixRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/PriceProductSchedule/Persistence/PriceProductScheduleRepository.php",
        "description": "Prefix `is` must not be used with postfix `Exist`. Method: Spryker\\Zed\\PriceProductSchedule\\Persistence\\PriceProductScheduleRepository::isScheduledPriceForSwitchExists().",
        "rule": "ExistsPostfixRule",
        "ruleset": "Spryker",
        "priority": "1"
    }
]
